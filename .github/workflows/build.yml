on:
  pull_request:
  push:
  workflow_dispatch:
  
jobs:
  build-windows:
    strategy:
      matrix:
        config:
          - { mode: debug, arch: x86, platform: windows }
          - { mode: debug, arch: x64, platform: windows }
          - { mode: debug, arch: arm, platform: windows }
          - { mode: debug, arch: arm64, platform: windows }
          # - { mode: debug, arch: arm64ec, platform: windows }
          - { mode: release, arch: x86, platform: windows }
          - { mode: release, arch: x64, platform: windows }
          - { mode: release, arch: arm, platform: windows }
          - { mode: release, arch: arm64, platform: windows }
          # - { mode: release, arch: arm64ec, platform: windows }
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: xmake-io/github-action-setup-xmake@v1
      
      - uses: actions/cache@v4
        with:
          path: |
            ~/AppData/Local/.xmake
          key: xmake-${{ hashFiles('xmake.lua') }}
          restore-keys: |
            xmake-

      - run: |
          xmake repo -u

      - run: |
          xmake f -a ${{ matrix.config.arch }} -m ${{ matrix.config.mode }} -p ${{ matrix.config.platform }} -v -y

      - run: |
          xmake -v -y

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.config.mode }}-${{ matrix.config.platform }}-${{ matrix.config.arch }}-${{ github.sha }}
          path: |
            build/${{ matrix.config.platform }}/${{ matrix.config.arch }}/${{ matrix.config.mode }}/
  build-linux:
    strategy:
      matrix:
        config:
          - { mode: debug, arch: x86_64, platform: linux }
          - { mode: release, arch: x86_64, platform: linux }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: xmake-io/github-action-setup-xmake@v1

      - name: Add repository and update
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update

      - name: Last GCC package
        id: gcc-package
        run: |
          LATEST_GCC_PACKAGE=$(apt-cache search gcc | grep '^gcc-[0-9]* ' | sort -rV | head -n 1 | cut -d ' ' -f 1)
          echo "latest_gcc_package=$LATEST_GCC_PACKAGE" >> $GITHUB_OUTPUT

      - name: Last Gpp package
        id: gpp-package
        run: |
          LATEST_GPP_PACKAGE=$(apt-cache search g++ | grep '^g++-[0-9]* ' | sort -rV | head -n 1 | cut -d ' ' -f 1)
          echo "latest_gpp_package=$LATEST_GPP_PACKAGE" >> $GITHUB_OUTPUT

      - name: Setup GCC
        run: |
          sudo apt-get install -y ${{ steps.gcc-package.outputs.latest_gcc_package }} ${{ steps.gpp-package.outputs.latest_gpp_package }}
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/${{ steps.gcc-package.outputs.latest_gcc_package }} 60 --slave /usr/bin/g++ g++ /usr/bin/${{ steps.gpp-package.outputs.latest_gpp_package }}
          sudo update-alternatives --set gcc /usr/bin/${{ steps.gcc-package.outputs.latest_gcc_package }}

      - name: GCC version
        run: |
          gcc --version
          g++ --version

      - uses: actions/cache@v4
        with:
          path: |
            ~/AppData/Local/.xmake
          key: xmake-${{ hashFiles('xmake.lua') }}
          restore-keys: |
            xmake-

      - run: |
          xmake repo -u

      - run: |
          xmake f -a ${{ matrix.config.arch }} -m ${{ matrix.config.mode }} -v -y

      - run: |
          xmake -v -y

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.config.mode }}-${{ matrix.config.platform }}-${{ matrix.config.arch }}-${{ github.sha }}
          path: |
            build/${{ matrix.config.platform }}/${{ matrix.config.arch }}/${{ matrix.config.mode }}/
